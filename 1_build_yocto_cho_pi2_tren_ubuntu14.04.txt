* Tham khảo:
http://www.embarcados.com.br/raspberry-pi-2-qt5-yocto-parte-1/

* Để build file ảnh yocto chứa hệ điều hành cho raspberry pi ta cần một máy tính chạy một trong những bản phân phối Linux sau:
	Ubuntu 14.04 (LTS)
	Ubuntu 14.10
	Fedora release 21
	CentOS release 6.x
	CentOS release 7.x
	Debian GNU/Linux 7.x (Wheezy)
	Debian GNU/Linux 8.x (Jessie)
	openSUSE 13.2

* Trong hướng dẫn này người viết sử dụng ubuntu bản 14.04.3 LTS (để kiểm tra phiên bản hiện tại của hệ điều hành Ubuntu, ta dùng "$lsb_release -a")
	
* Phân vùng ổ cứng dùng được dùng cho thư mục home phải còn trống ít nhất 70gb!

* Cài đặt một số gói cần thiết để chuẩn bị cho việc build yocto:
	$sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat libsdl1.2-dev xterm

* Tạo thư mục để build và tải về mã nguồn cần thiết:
	$mkdir -p ~/yocto/dl
	$cd ~/yocto
	$git clone -b fido git://git.yoctoproject.org/poky poky-fido
	$cd poky-fido
	$git clone -b fido git://git.yoctoproject.org/meta-raspberrypi
	$git clone -b fido https://github.com/meta-qt5/meta-qt5.git
	$git clone -b fido git://git.openembedded.org/meta-openembedded
	$git clone -b fido https://bitbucket.org/embarcados/meta-embarcados.git
    
* Lưu ý: đến đây ta sử dụng Bash Shell để chạy thay vì Fishshell
* Thiết lập môi trường để tạo phần mềm artifacts?
	$cd ~/yocto/
	$. poky-fido/oe-init-build-env build-fido

	Sau lệnh này thư mục ~/yocto/build-fido/ sẽ được tạo ra

* Chỉnh sửa nội dung của file ~/yocto/build-fido/conf/bblayers.conf thành như sau:
	$vim 	~/yocto/build-fido/conf/bblayers.conf
#####################################################################
# LAYER_CONF_VERSION is increased each time build/conf/bblayers.conf
# changes incompatibly
LCONF_VERSION = "6"

BBPATH = "${TOPDIR}"
BBFILES ?= ""

BBLAYERS ?= " \
    ${TOPDIR}/../poky-fido/meta-embarcados \
    ${TOPDIR}/../poky-fido/meta-embarcados/meta-rpi \
    ${TOPDIR}/../poky-fido/meta-qt5 \
    ${TOPDIR}/../poky-fido/meta-raspberrypi \
    ${TOPDIR}/../poky-fido/meta-openembedded/meta-oe \
    ${TOPDIR}/../poky-fido/meta-openembedded/meta-ruby \
    ${TOPDIR}/../poky-fido/meta \
    ${TOPDIR}/../poky-fido/meta-yocto \
  "
#####################################################################

-> nội dung của file này chứa các lớp sẽ được quan tâm tới bởi hệ thống build.

* Thêm các thiết lập cho biến môi trường như sau ở đầu của file ~/yocto/build-fido/conf/local.conf :
	$vim ~/yocto/build-fido/conf/local.conf
#####################################################################
MACHINE = "raspberrypi2"
DISTRO = "poky"
DL_DIR = "${TOPDIR}/../dl"
PACKAGE_CLASSES = "package_ipk"
DISTRO_FEATURES_remove = "x11 wayland"
LICENSE_FLAGS_WHITELIST = "commercial license"
# Set Rpi GPU Memory to 128MB
GPU_MEM = "128"
BBMASK = "meta-embarcados/recipes-browser/chromium/chromium_%.bbappend"
#####################################################################

* Tạo file ảnh với QT5:
	Khi tải về mã nguồn và thiết lập xong hệ thống build, ta sẽ tạo file ảnh với một số ứng dung QT demo trên đó (qt5-image-demo)
	Thời gian build có thể lên tới vài tiếng đồng hồ.

	$cd ~/yocto
	$. poky-fido/oe-init-build-env build-fido
	$bitbake qt5-image-demo

	* Một số thông tin được hiển thị trong quá trình build:
giang@giang:~/yocto/build-fido$ bitbake qt5-image-demo
Parsing recipes: 100% |########################################################################################################################################################################################################| Time: 00:02:28
Parsing of 1546 .bb files complete (0 cached, 1546 parsed). 2023 targets, 279 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION        = "1.26.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "Ubuntu-14.04"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "raspberrypi2"
DISTRO            = "poky"
DISTRO_VERSION    = "1.8.1"
TUNE_FEATURES     = "arm armv7a vfp thumb neon callconvention-hard vfpv4 cortexa7"
TARGET_FPU        = "vfp-vfpv4-neon"
meta-embarcados
meta-rpi          = "fido:dfb2e27bf26b109fc6ccb3bc91924fb3bb24f655"
meta-qt5          = "fido:90919b9d86988e7da01fa2c0a07246b5b5600a5d"
meta-raspberrypi  = "fido:b896a7da70dd7a16ba7ffd664f7747cb37e1d142"
meta-oe
meta-ruby         = "fido:df2f700d66bace65f5d802225232d01cf511fe81"
meta
meta-yocto        = "fido:b74ea963cefffad9fbd91d4eb9b240f6a8c86cd0"

NOTE: Preparing RunQueue
NOTE: Executing SetScene Tasks
NOTE: Executing RunQueue Tasks
Currently 4 running tasks (99 of 3630):
0: gcc-source-4.9.2-r0 do_unpack (pid 19309)
1: linux-libc-headers-3.19-r0 do_fetch (pid 27108)
2: xz-native-5.2.0-r0 do_configure (pid 29051)
3: gmp-native-6.0.0-r0 do_configure (pid 29236)

WARNING: Failed to fetch URL http://downloads.sourceforge.net/project/libpng/libpng16/1.6.16/libpng-1.6.16.tar.xz, attempting MIRRORS if available
WARNING: Failed to fetch URL http://www.apache.org/dist/apr/apr-1.5.1.tar.bz2, attempting MIRRORS if available
WARNING: Failed to fetch URL http://www.apache.org/dist/subversion/subversion-1.8.11.tar.bz2, attempting MIRRORS if available
WARNING: QA Issue: gstreamer1.0-plugins-bad: configure was passed unrecognised options: --with-egl-window-system [unknown-configure-option]
Currently 4 running tasks (1528 of 3630):
0: qtbase-5.4.2+gitAUTOINC+2cb17c1fb9-r0 do_compile (pid 2579)
1: binutils-native-2.24-r0 do_compile (pid 30567)
2: qtwebkit-5.4.2+gitAUTOINC+ea590d74ea-r0 do_fetch (pid 16493)
3: gstreamer1.0-plugins-bad-1.4.5-r0 do_install (pid 10606)

NOTE: Executing RunQueue Tasks
WARNING: QA Issue: ELF binary '/home/giang/yocto/build-fido/tmp/work/cortexa7hf-vfp-vfpv4-neon-poky-linux-gnueabi/x264/r2265+gitAUTOINC+ffc3ad4945-r0/packages-split/x264/usr/lib/libx264.so.133' has relocations in .text [textrel]
WARNING: QA Issue: ELF binary '/home/giang/yocto/build-fido/tmp/work/cortexa7hf-vfp-vfpv4-neon-poky-linux-gnueabi/libav/9.16-r0/packages-split/libavcodec/usr/lib/libavcodec.so.54.35.0' has relocations in .text [textrel]
WARNING: QA Issue: pulseaudio-module-console-kit rdepends on consolekit, but it isn't a build dependency? [build-deps]
WARNING: QA Issue: ELF binary '/home/giang/yocto/build-fido/tmp/work/cortexa7hf-vfp-vfpv4-neon-poky-linux-gnueabi/vc-graphics-hardfp/20150206-r1.0/packages-split/vc-graphics-hardfp/usr/lib/libGLESv2.so' has relocations in .text [textrel]
WARNING: QA Issue: ELF binary '/home/giang/yocto/build-fido/tmp/work/cortexa7hf-vfp-vfpv4-neon-poky-linux-gnueabi/omxplayer/git-r3/packages-split/omxplayer/usr/lib/omxplayer/libavcodec.so.56.13.100' has relocations in .text [textrel]
WARNING: QA Issue: ELF binary '/home/giang/yocto/build-fido/tmp/work/cortexa7hf-vfp-vfpv4-neon-poky-linux-gnueabi/gstreamer1.0-libav/1.4.5-r0/packages-split/gstreamer1.0-libav/usr/lib/gstreamer-1.0/libgstlibav.so' has relocations in .text [textrel]
NOTE: Tasks Summary: Attempted 3630 tasks of which 2675 didn't need to be rerun and all succeeded.

*Khi kết thúc quá trình build trên, file ảnh qt5-image-demo-raspberrypi2.rpi-sdimg sẽ được tạo ra trong thư mục ~/yocto/build-fido/tmp/deploy/images/raspberrypi2/ :
	$file ~/yocto/build-fido/tmp/deploy/images/raspberrypi2/qt5-image-demo-raspberrypi2.rpi-sdimg
	/home/giang/yocto/build-fido/tmp/deploy/images/raspberrypi2/qt5-image-demo-raspberrypi2.rpi-sdimg: symbolic link to `qt5-image-demo-raspberrypi2-20151022020232.rootfs.rpi-sdimg'
	
	$du -h ~/yocto/build-fido/tmp/deploy/images/raspberrypi2/qt5-image-demo-raspberrypi2-20151022020232.rootfs.rpi-sdimg
	549M    /home/giang/yocto/build-fido/tmp/deploy/images/raspberrypi2/qt5-image-demo-raspberrypi2-20151022020232.rootfs.rpi-sdimg

*Ghi file ảnh ra thẻ nhớ SD:
	+ Xác định tên device của thẻ nhớ: dùng lênh fdisk hoặc lsblk
		$sudo fdisk -l
		$lsblk
	
	+ unmount mọi phân vùng của thẻ nhớ, giả sử trong trường hợp này là sdb
		$sudo umount /dev/sdb*

	+ ghi file ảnh ra thẻ nhớ /dev/sdb, lưu ý là phải chọn sdb chứ ko chọn sdb1 hay sdb2 ..., vì ta muốn ghi vào cả thẻ nhớ chứ không phải là ghi vào 1 phân vùng của thẻ nhớ:
		$sudo dd if=~/yocto/build-fido/tmp/deploy/images/raspberrypi2/qt5-image-demo-raspberrypi2.rpi-sdimg of=/dev/sdb; sync
